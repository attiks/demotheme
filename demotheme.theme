<?php

/**
 * @file
 * Functions to support theming in the Demo theme.
 */

use Drupal\Component\Utility\String;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 *
 * Adds body classes if certain regions have content.
 */
function demotheme_preprocess_page(&$variables) {
  // Add information about the number of sidebars.
  /** @var \Drupal\Core\Page\HtmlPage $page_object */
  $page_object = $variables['page']['#page'];
  $attributes = $page_object->getBodyAttributes();
  $classes = $attributes['class'];
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $classes[] = 'layout-two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $classes[] = 'layout-one-sidebar';
    $classes[] = 'layout-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $classes[] = 'layout-one-sidebar';
    $classes[] = 'layout-sidebar-second';
  }
  else {
    $classes[] = 'layout-no-sidebars';
  }

  if (!empty($variables['page']['featured'])) {
    $classes[] = 'featured';
  }

  if (!empty($variables['page']['triptych_first'])
    || !empty($variables['page']['triptych_middle'])
    || !empty($variables['page']['triptych_last'])) {
    $classes[] = 'triptych';
  }

  if (!empty($variables['page']['footer_firstcolumn'])
    || !empty($variables['page']['footer_secondcolumn'])
    || !empty($variables['page']['footer_thirdcolumn'])
    || !empty($variables['page']['footer_fourthcolumn'])) {
    $classes[] = 'footer-columns';
  }

  // Store back the classes to the htmlpage object.
  $attributes['class'] = $classes;

  // Set additional attributes on the primary and secondary navigation menus.
  if (!empty($variables['main_menu'])) {
    $variables['main_menu']['#attributes']['id'] = 'main-menu-links';
    $variables['main_menu']['#attributes']['class'][] = 'links';
  }
  if (!empty($variables['secondary_menu'])) {
    $variables['secondary_menu']['#attributes']['id'] = 'secondary-menu-links';
    $variables['secondary_menu']['#attributes']['class'][] = 'links';
    $variables['secondary_menu']['#attributes']['class'][] = 'inline';
  }

  // Set the options that apply to both page and maintenance page.
  _demotheme_process_page($variables);

  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = array(
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    );
    $variables['title_suffix']['shortcut_wrapper'] = array(
      '#markup' => '</div>',
      '#weight' => -99,
    );
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

/**
 * Implements hook_preprocess_HOOK() for maintenance-page.html.twig.
 */
function demotheme_preprocess_maintenance_page(&$variables) {
  // By default, site_name is set to Drupal if no db connection is available
  // or during site installation. Setting site_name to an empty string makes
  // the site and update pages look cleaner.
  // @see template_preprocess_maintenance_page
  if (!$variables['db_is_active']) {
    $variables['site_name'] = '';
  }
  // Normally we could attach libraries via hook_page_alter(), but when the
  // database is inactive it's not called so we add them here.
  $libraries = array(
    '#attached' => array(
      'library' => array(
        'demotheme/maintenance_page',
      ),
    ),
  );
  drupal_render($libraries);

  // Set the options that apply to both page and maintenance page.
  _demotheme_process_page($variables);
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function demotheme_preprocess_node(&$variables) {
  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function demotheme_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu-tree.html.twig.
 *
 * @see template_preprocess_menu_tree()
 */
function demotheme_preprocess_menu_tree(&$variables) {
  $variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implements THEME_menu_tree__MENUNAME().
 */
function demotheme_menu_tree__shortcut_default($variables) {
  return '<ul class="menu">' . $variables['tree'] . '</ul>';
}

/**
 * Implements hook_preprocess_HOOK() for field.html.twig.
 *
 * @see template_preprocess_field()
 */
function demotheme_preprocess_field(&$variables) {
  $element = $variables['element'];
  if ($element['#field_type'] == 'taxonomy_term_reference') {
    $variables['title_attributes']['class'][] = 'field-label';
    if ($variables['element']['#label_display'] == 'inline') {
      $variables['title_attributes']['class'][] = 'inline';
    }
  }
}

/**
 * Helper function for handling the site name and slogan.
 */
function _demotheme_process_page(&$variables) {
  $site_config = \Drupal::config('system.site');
  // Always print the site name and slogan, but if they are toggled off, we'll
  // just hide them visually.
  $variables['hide_site_name']   = theme_get_setting('features.name') ? FALSE : TRUE;
  $variables['hide_site_slogan'] = theme_get_setting('features.slogan') ? FALSE : TRUE;
  if ($variables['hide_site_name']) {
    // If toggle_name is FALSE, the site_name will be empty, so we rebuild it.
    $variables['site_name'] = String::checkPlain($site_config->get('name'));
  }
  if ($variables['hide_site_slogan']) {
    // If toggle_site_slogan is FALSE, the site_slogan will be empty, so we
    // rebuild it.
    $variables['site_slogan'] = Xss::filterAdmin($site_config->get('slogan'));
  }
}
